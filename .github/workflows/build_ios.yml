name: Build iOS
"on": { workflow_dispatch: {} }

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: false

      - name: Prepare bundler
        run: |
          gem install bundler -v 2.7.2
          bundle config set path 'vendor/bundle'
          bundle config set deployment 'true'
          bundle config set without 'development test'
          bundle --version

      # фикс для платформ на macOS-раннерах (как обсуждали)
      - name: Add Bundler platforms (macOS runners)
        run: |
          bundle lock --add-platform arm64-darwin-24
          bundle lock --add-platform x86_64-darwin-23
          bundle lock --add-platform ruby || true

      - name: Install Ruby gems
        run: |
          bundle install --jobs 4 --retry 3 --verbose | tee bundle_install.log

      # НИКАКИХ ручных SSH — deploy key создаст fastlane-plugin-github_action
      - name: Build iOS with Fastlane (auto deploy key)
        env:
          # App Store Connect (API key)
          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID:     ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_P8:         ${{ secrets.APPSTORE_P8 }}

          # GitHub & match
          GH_PAT:              ${{ secrets.GH_PAT }}                  # токен с правами repo
          GITHUB_REPOSITORY:   ${{ github.repository }}               # org/repo (текущий)
          MATCH_REPOSITORY:    ${{ secrets.MATCH_REPOSITORY }}        # org/match-repo
          MATCH_PASSWORD:      ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BRANCH:    main

          # Xcode target
          IOS_BUNDLE_ID:       ${{ secrets.IOS_BUNDLE_ID }}
          PROJECT_NAME:        ${{ secrets.PROJECT_NAME }}
          IOS_SCHEME:          ${{ secrets.IOS_SCHEME }}
        run: |
          bundle exec fastlane ios init_ci
