platform :ios do
  private_lane :run_match do |options|
    bundle_id = ENV["IOS_BUNDLE_ID"].to_s.strip
    UI.user_error!("IOS_BUNDLE_ID is missing") if bundle_id.empty?

    app_ids = [bundle_id, "#{bundle_id}.notifications"]

    match(
      type: "appstore",
      readonly: options[:readonly],
      git_url: "git@github.com:#{ENV["MATCH_REPOSITORY"]}.git",
      git_branch: ENV["MATCH_GIT_BRANCH"] || "main",
      app_identifier: app_ids,
      generate_apple_certs: true,
      git_full_name:  ENV["GIT_FULL_NAME"]  || "ci-bot",
      git_user_email: ENV["GIT_USER_EMAIL"] || "ci-bot@local"
    )
  end

  desc "Create/Update signing in match (WRITE)"
  lane :generate_certs do
    app_store_connect_api_key(
      key_id: ENV["APPSTORE_KEY_ID"],
      issuer_id: ENV["APPSTORE_ISSUER_ID"],
      key_content: ENV["APPSTORE_P8"],
      in_house: false
    )
    run_match(readonly: false)   # <- именно write
  end

  private_lane :ensure_certs do
    app_store_connect_api_key(
      key_id: ENV["APPSTORE_KEY_ID"],
      issuer_id: ENV["APPSTORE_ISSUER_ID"],
      key_content: ENV["APPSTORE_P8"],
      in_house: false
    )
    run_match(readonly: true)    # <- билд только читает
  end
end
