name: Build iOS (native)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      # SSH для доступа к match-репозиторию (как в CI_Core)
      - name: Setup SSH for match (CI_Core style)
        env:
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}   # приватный ключ OpenSSH
          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}   # org/repo
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "${MATCH_DEPLOY_KEY:-}" ]; then
            echo "⚠️  MATCH_DEPLOY_KEY is empty, skipping SSH setup"
            exit 0
          fi

          echo "→ Starting ssh-agent and adding deploy key"
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"

          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          umask 177
          echo "${MATCH_DEPLOY_KEY}" > ~/.ssh/id_match
          chmod 600 ~/.ssh/id_match

          {
            echo "Host github.com"
            echo "  HostName github.com"
            echo "  IdentityFile ~/.ssh/id_match"
            echo "  IdentitiesOnly yes"
            echo "  StrictHostKeyChecking accept-new"
          } > ~/.ssh/config
          chmod 600 ~/.ssh/config

          # known_hosts на всякий случай
          ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts 2>/dev/null || true

      # DEBUG: покажем, что за файлы есть и что найдём для сборки
      - name: Debug Xcode files
        shell: bash
        run: |
          set -euo pipefail
          echo "PWD: $(pwd)"
          echo "Top-level files:"
          ls -la
          echo "Find *.xcworkspace:"
          find . -name "*.xcworkspace" -maxdepth 3 -print || true
          echo "Find *.xcodeproj:"
          find . -name "*.xcodeproj"  -maxdepth 3 -print || true

      - name: Build (нативный через Fastlane)
        env:
          # App Store Connect (API key)
          APPSTORE_ISSUER_ID:  ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID:     ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_P8:         ${{ secrets.APPSTORE_P8 }}

          # Bundle ID
          IOS_BUNDLE_ID:       ${{ secrets.IOS_BUNDLE_ID }}

          # match/git
          GH_PAT:              ${{ secrets.GH_PAT }}
          GITHUB_REPOSITORY:   ${{ github.repository }}
          MATCH_REPOSITORY:    ${{ secrets.MATCH_REPOSITORY }}   # org/repo
          MATCH_PASSWORD:      ${{ secrets.MATCH_PASSWORD }}
          MATCH_DEPLOY_KEY:    ${{ secrets.MATCH_DEPLOY_KEY }}

          # Параметры сборки
          IOS_SCHEME:          ${{ secrets.IOS_SCHEME }}          # напр. ChickCare
          PROJECT_NAME:        ${{ secrets.PROJECT_NAME }}        # напр. ChickCare
          # XCODE_WORKSPACE:   ${{ secrets.XCODE_WORKSPACE }}     # (необязательно) ChickCare.xcworkspace
          # XCODE_PROJECT:     ${{ secrets.XCODE_PROJECT }}       # (необязательно) ChickCare.xcodeproj

          # Автор для коммитов в match (если потребуется write)
          GIT_FULL_NAME:       ci-bot
          GIT_USER_EMAIL:      ci-bot@local
        shell: bash
        run: |
          set -euo pipefail
          git config --global user.name  "${GIT_FULL_NAME}"
          git config --global user.email "${GIT_USER_EMAIL}"
          bundle exec fastlane ios build
